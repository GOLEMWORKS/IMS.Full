@using IMS.CoreBusiness
@inject IViewInventoriesByNameUseCase ViewInventoriesByNameUseCase
@inject NavigationManager NavigationManager

<div class="input-group-text">
    <input type="text" 
        class="form-control"
        placeholder="Введите наименование"
        @bind-value="inventoryNameToSearch"
        @onkeyup="Enter"/>

    <button type="button"
            class="input-group-text btn-outline-success"
            @onclick="@(async()=> {await ViewInventories();})"> Найти &#8203;
            <i class="fa fa-search"></i>
    </button>

    <button type="button"
            class="input-group-text btn-outline-success"
            @onclick="RedirectToAddPage"> Добавить &#8203;
            <i class="fa fa-plus"></i>
    </button>
</div>


@code {
    private string? inventoryNameToSearch;

    [Parameter]
    public EventCallback<List<Inventory>> OnSearchInventories { get; set; }

    private async Task ViewInventories()
    {
        var inventories = (await ViewInventoriesByNameUseCase
                .ExecuteAsync(inventoryNameToSearch??string.Empty)).ToList();

        await OnSearchInventories.InvokeAsync(inventories);
    }


    public void Enter(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            ViewInventories();
        }
    }

    public void RedirectToAddPage()
    {
        NavigationManager.NavigateTo("/addnewinventory");
    }
}
