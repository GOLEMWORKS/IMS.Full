<div class="form-group">
    <label>Комплектующие</label>
    <ViewInventoriesComponent 
        DisplaySearchResult="true"
        OnSelectInventory="OnSelectInventory">
    </ViewInventoriesComponent>
</div>
@if (prodInvs != null
       && prodInvs.Count > 0)
{
    <table>
            <thead>
                <tr>
                    <td></td>
                    <td></td>
                </tr>
            </thead>
            <tbody>
    @foreach (var prodInvs in this.prodInvs)
    {
            
        <tr>
            <td>@prodInvs.Inventory.InventoryName &nbsp;</td>
            <td>
                <input type="number"
                        min="0"
                        @bind-value="prodInvs.InventoryQuantity"
                        @bind-value:event="oninput"
                        @onchange="OnInventoryQtYChange"
                        placeholder="Значение"
                        class="form-control input-group-sm"/>
            </td>
            <td>
                <button class="btn btn-link"
                        type="button"
                        @onclick="() => RemoveInv(prodInvs)">
                    Убрать
                </button>
            </td>
        </tr>
        }
    </tbody>
    </table>
}

@code {

    [Parameter]
    public EventCallback<List<ProductInventory>> OnSelectedInventory { get; set; }

    [Parameter]
    public List<ProductInventory> prodInvs { get; set; } = new List<ProductInventory>();

    private async Task OnInventoryQtYChange()
    {
        await OnSelectedInventory.InvokeAsync(this.prodInvs);
    }

    private async Task OnSelectInventory(Inventory inventory)
    {
        if (!prodInvs.Any(x => x.Inventory.InventoryName.Equals(inventory.InventoryName, StringComparison.OrdinalIgnoreCase)))
        {
            this.prodInvs.Add(new ProductInventory { InventoryId = inventory.InventoryId, 
                                                     Inventory = inventory
            });
        }

        await OnSelectedInventory.InvokeAsync(this.prodInvs);
    }

    private void RemoveInv(ProductInventory prodInvs)
    {
        this.prodInvs.Remove(prodInvs);
    }
}
